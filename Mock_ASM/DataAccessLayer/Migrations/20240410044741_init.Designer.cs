// <auto-generated />
using System;
using DataAccessLayer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(MockAsmContext))]
    [Migration("20240410044741_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassInstructor", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<int>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    b.HasKey("ClassId", "InstructorId")
                        .HasName("PK__Class_In__67EA8CE811DF3DF7");

                    b.HasIndex("InstructorId");

                    b.ToTable("Class_Instructor", (string)null);
                });

            modelBuilder.Entity("DataAccessLayer.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("class_code")
                        .IsFixedLength();

                    b.HasKey("ClassId")
                        .HasName("PK__Class__FDF4798613B0ABE7");

                    b.HasIndex(new[] { "ClassCode" }, "UQ__Class__0AF9B2E4A3BA1D7A")
                        .IsUnique();

                    b.ToTable("Class", (string)null);

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ClassCode = "CS101"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Instructor", b =>
                {
                    b.Property<int>("InstructorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("instructor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InstructorId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("InstructorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("instructor_name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("InstructorId")
                        .HasName("PK__Instruct__A1EF56E82CAFDCB3");

                    b.HasIndex(new[] { "Email" }, "UQ__Instruct__AB6E6164A2065F42")
                        .IsUnique();

                    b.ToTable("Instructor", (string)null);

                    b.HasData(
                        new
                        {
                            InstructorId = 1,
                            DateOfBirth = new DateTime(1997, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@example.com",
                            InstructorName = "Jane Smith",
                            Phone = "0987654321"
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("class_id");

                    b.Property<string>("StudentCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("char(8)")
                        .HasColumnName("student_code")
                        .IsFixedLength();

                    b.Property<int>("StudentInfoId")
                        .HasColumnType("int")
                        .HasColumnName("student_info_id");

                    b.HasKey("StudentId")
                        .HasName("PK__Student__2A33069AECCB0CEF");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentInfoId");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            ClassId = 1,
                            StudentCode = "S001",
                            StudentInfoId = 1
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Models.StudentInfo", b =>
                {
                    b.Property<int>("StudentInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("student_info_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentInfoId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("student_name");

                    b.HasKey("StudentInfoId")
                        .HasName("PK__Student___8E40FB55BA9B17B1");

                    b.HasIndex(new[] { "Email" }, "UQ__Student___AB6E61649A2245A9")
                        .IsUnique();

                    b.ToTable("Student_Info", (string)null);

                    b.HasData(
                        new
                        {
                            StudentInfoId = 1,
                            DateOfBirth = new DateTime(2002, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nguyendz@example.com",
                            Phone = "1234567890",
                            StudentName = "NguyenDZ"
                        });
                });

            modelBuilder.Entity("ClassInstructor", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Class_Ins__class__34C8D9D1");

                    b.HasOne("DataAccessLayer.Models.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .IsRequired()
                        .HasConstraintName("FK__Class_Ins__instr__35BCFE0A");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Student", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Student__class_i__2F10007B");

                    b.HasOne("DataAccessLayer.Models.StudentInfo", "StudentInfo")
                        .WithMany("Students")
                        .HasForeignKey("StudentInfoId")
                        .IsRequired()
                        .HasConstraintName("FK__Student__student__2E1BDC42");

                    b.Navigation("Class");

                    b.Navigation("StudentInfo");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Class", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("DataAccessLayer.Models.StudentInfo", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
